/* eslint-disable */
// source: executionvenue.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var order_pb = require('./order_pb.js');
goog.object.extend(proto, order_pb);
var modelcommon_pb = require('./modelcommon_pb.js');
goog.object.extend(proto, modelcommon_pb);
goog.exportSymbol('proto.executionvenue.CancelOrderParams', null, global);
goog.exportSymbol('proto.executionvenue.CreateAndRouteOrderParams', null, global);
goog.exportSymbol('proto.executionvenue.ExecParamsMetaDataJson', null, global);
goog.exportSymbol('proto.executionvenue.ModifyOrderParams', null, global);
goog.exportSymbol('proto.executionvenue.OrderId', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.executionvenue.CreateAndRouteOrderParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.executionvenue.CreateAndRouteOrderParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.executionvenue.CreateAndRouteOrderParams.displayName = 'proto.executionvenue.CreateAndRouteOrderParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.executionvenue.OrderId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.executionvenue.OrderId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.executionvenue.OrderId.displayName = 'proto.executionvenue.OrderId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.executionvenue.ExecParamsMetaDataJson = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.executionvenue.ExecParamsMetaDataJson, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.executionvenue.ExecParamsMetaDataJson.displayName = 'proto.executionvenue.ExecParamsMetaDataJson';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.executionvenue.CancelOrderParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.executionvenue.CancelOrderParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.executionvenue.CancelOrderParams.displayName = 'proto.executionvenue.CancelOrderParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.executionvenue.ModifyOrderParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.executionvenue.ModifyOrderParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.executionvenue.ModifyOrderParams.displayName = 'proto.executionvenue.ModifyOrderParams';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.toObject = function(opt_includeInstance) {
  return proto.executionvenue.CreateAndRouteOrderParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.executionvenue.CreateAndRouteOrderParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.CreateAndRouteOrderParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderside: jspb.Message.getFieldWithDefault(msg, 1, 0),
    quantity: (f = msg.getQuantity()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    listingid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    destination: jspb.Message.getFieldWithDefault(msg, 5, ""),
    originatorid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    originatorref: jspb.Message.getFieldWithDefault(msg, 7, ""),
    rootoriginatorid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    rootoriginatorref: jspb.Message.getFieldWithDefault(msg, 9, ""),
    execparametersjson: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.executionvenue.CreateAndRouteOrderParams}
 */
proto.executionvenue.CreateAndRouteOrderParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.executionvenue.CreateAndRouteOrderParams;
  return proto.executionvenue.CreateAndRouteOrderParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.executionvenue.CreateAndRouteOrderParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.executionvenue.CreateAndRouteOrderParams}
 */
proto.executionvenue.CreateAndRouteOrderParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.model.Side} */ (reader.readEnum());
      msg.setOrderside(value);
      break;
    case 2:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setQuantity(value);
      break;
    case 3:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListingid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginatorid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginatorref(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootoriginatorid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRootoriginatorref(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setExecparametersjson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.executionvenue.CreateAndRouteOrderParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.executionvenue.CreateAndRouteOrderParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.CreateAndRouteOrderParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderside();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getListingid();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOriginatorid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOriginatorref();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRootoriginatorid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRootoriginatorref();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getExecparametersjson();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional model.Side orderSide = 1;
 * @return {!proto.model.Side}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getOrderside = function() {
  return /** @type {!proto.model.Side} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.model.Side} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setOrderside = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional model.Decimal64 quantity = 2;
 * @return {?proto.model.Decimal64}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getQuantity = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 2));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
*/
proto.executionvenue.CreateAndRouteOrderParams.prototype.setQuantity = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.clearQuantity = function() {
  return this.setQuantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional model.Decimal64 price = 3;
 * @return {?proto.model.Decimal64}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getPrice = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 3));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
*/
proto.executionvenue.CreateAndRouteOrderParams.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 listingId = 4;
 * @return {number}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getListingid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setListingid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string destination = 5;
 * @return {string}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string originatorId = 6;
 * @return {string}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getOriginatorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setOriginatorid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string originatorRef = 7;
 * @return {string}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getOriginatorref = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setOriginatorref = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string rootOriginatorId = 8;
 * @return {string}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getRootoriginatorid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setRootoriginatorid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string rootOriginatorRef = 9;
 * @return {string}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getRootoriginatorref = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setRootoriginatorref = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string execParametersJson = 10;
 * @return {string}
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.getExecparametersjson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CreateAndRouteOrderParams} returns this
 */
proto.executionvenue.CreateAndRouteOrderParams.prototype.setExecparametersjson = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.executionvenue.OrderId.prototype.toObject = function(opt_includeInstance) {
  return proto.executionvenue.OrderId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.executionvenue.OrderId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.OrderId.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.executionvenue.OrderId}
 */
proto.executionvenue.OrderId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.executionvenue.OrderId;
  return proto.executionvenue.OrderId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.executionvenue.OrderId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.executionvenue.OrderId}
 */
proto.executionvenue.OrderId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.executionvenue.OrderId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.executionvenue.OrderId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.executionvenue.OrderId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.OrderId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string orderId = 1;
 * @return {string}
 */
proto.executionvenue.OrderId.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.OrderId} returns this
 */
proto.executionvenue.OrderId.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.executionvenue.ExecParamsMetaDataJson.prototype.toObject = function(opt_includeInstance) {
  return proto.executionvenue.ExecParamsMetaDataJson.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.executionvenue.ExecParamsMetaDataJson} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.ExecParamsMetaDataJson.toObject = function(includeInstance, msg) {
  var f, obj = {
    json: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.executionvenue.ExecParamsMetaDataJson}
 */
proto.executionvenue.ExecParamsMetaDataJson.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.executionvenue.ExecParamsMetaDataJson;
  return proto.executionvenue.ExecParamsMetaDataJson.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.executionvenue.ExecParamsMetaDataJson} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.executionvenue.ExecParamsMetaDataJson}
 */
proto.executionvenue.ExecParamsMetaDataJson.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.executionvenue.ExecParamsMetaDataJson.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.executionvenue.ExecParamsMetaDataJson.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.executionvenue.ExecParamsMetaDataJson} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.ExecParamsMetaDataJson.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJson();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string json = 1;
 * @return {string}
 */
proto.executionvenue.ExecParamsMetaDataJson.prototype.getJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.ExecParamsMetaDataJson} returns this
 */
proto.executionvenue.ExecParamsMetaDataJson.prototype.setJson = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.executionvenue.CancelOrderParams.prototype.toObject = function(opt_includeInstance) {
  return proto.executionvenue.CancelOrderParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.executionvenue.CancelOrderParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.CancelOrderParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    listingid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ownerid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.executionvenue.CancelOrderParams}
 */
proto.executionvenue.CancelOrderParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.executionvenue.CancelOrderParams;
  return proto.executionvenue.CancelOrderParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.executionvenue.CancelOrderParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.executionvenue.CancelOrderParams}
 */
proto.executionvenue.CancelOrderParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListingid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.executionvenue.CancelOrderParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.executionvenue.CancelOrderParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.executionvenue.CancelOrderParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.CancelOrderParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getListingid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOwnerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string orderId = 1;
 * @return {string}
 */
proto.executionvenue.CancelOrderParams.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CancelOrderParams} returns this
 */
proto.executionvenue.CancelOrderParams.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 listingId = 2;
 * @return {number}
 */
proto.executionvenue.CancelOrderParams.prototype.getListingid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.executionvenue.CancelOrderParams} returns this
 */
proto.executionvenue.CancelOrderParams.prototype.setListingid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ownerId = 3;
 * @return {string}
 */
proto.executionvenue.CancelOrderParams.prototype.getOwnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.CancelOrderParams} returns this
 */
proto.executionvenue.CancelOrderParams.prototype.setOwnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.executionvenue.ModifyOrderParams.prototype.toObject = function(opt_includeInstance) {
  return proto.executionvenue.ModifyOrderParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.executionvenue.ModifyOrderParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.ModifyOrderParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    listingid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ownerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quantity: (f = msg.getQuantity()) && modelcommon_pb.Decimal64.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && modelcommon_pb.Decimal64.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.executionvenue.ModifyOrderParams}
 */
proto.executionvenue.ModifyOrderParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.executionvenue.ModifyOrderParams;
  return proto.executionvenue.ModifyOrderParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.executionvenue.ModifyOrderParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.executionvenue.ModifyOrderParams}
 */
proto.executionvenue.ModifyOrderParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListingid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerid(value);
      break;
    case 4:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setQuantity(value);
      break;
    case 5:
      var value = new modelcommon_pb.Decimal64;
      reader.readMessage(value,modelcommon_pb.Decimal64.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.executionvenue.ModifyOrderParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.executionvenue.ModifyOrderParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.executionvenue.ModifyOrderParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.executionvenue.ModifyOrderParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getListingid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOwnerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantity();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      modelcommon_pb.Decimal64.serializeBinaryToWriter
    );
  }
};


/**
 * optional string orderId = 1;
 * @return {string}
 */
proto.executionvenue.ModifyOrderParams.prototype.getOrderid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.ModifyOrderParams} returns this
 */
proto.executionvenue.ModifyOrderParams.prototype.setOrderid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 listingId = 2;
 * @return {number}
 */
proto.executionvenue.ModifyOrderParams.prototype.getListingid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.executionvenue.ModifyOrderParams} returns this
 */
proto.executionvenue.ModifyOrderParams.prototype.setListingid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string ownerId = 3;
 * @return {string}
 */
proto.executionvenue.ModifyOrderParams.prototype.getOwnerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.executionvenue.ModifyOrderParams} returns this
 */
proto.executionvenue.ModifyOrderParams.prototype.setOwnerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional model.Decimal64 quantity = 4;
 * @return {?proto.model.Decimal64}
 */
proto.executionvenue.ModifyOrderParams.prototype.getQuantity = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 4));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.executionvenue.ModifyOrderParams} returns this
*/
proto.executionvenue.ModifyOrderParams.prototype.setQuantity = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.executionvenue.ModifyOrderParams} returns this
 */
proto.executionvenue.ModifyOrderParams.prototype.clearQuantity = function() {
  return this.setQuantity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.executionvenue.ModifyOrderParams.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional model.Decimal64 price = 5;
 * @return {?proto.model.Decimal64}
 */
proto.executionvenue.ModifyOrderParams.prototype.getPrice = function() {
  return /** @type{?proto.model.Decimal64} */ (
    jspb.Message.getWrapperField(this, modelcommon_pb.Decimal64, 5));
};


/**
 * @param {?proto.model.Decimal64|undefined} value
 * @return {!proto.executionvenue.ModifyOrderParams} returns this
*/
proto.executionvenue.ModifyOrderParams.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.executionvenue.ModifyOrderParams} returns this
 */
proto.executionvenue.ModifyOrderParams.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.executionvenue.ModifyOrderParams.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.executionvenue);
