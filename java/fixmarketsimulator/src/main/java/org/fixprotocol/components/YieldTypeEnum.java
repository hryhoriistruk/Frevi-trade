// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package org.fixprotocol.components;

/**
 * Protobuf enum {@code Common.YieldTypeEnum}
 */
public enum YieldTypeEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>YIELD_TYPE_UNSPECIFIED = 0;</code>
   */
  YIELD_TYPE_UNSPECIFIED(0),
  /**
   * <code>YIELD_TYPE_AFTER_TAX_YIELD = 1 [(.fix.enum_value) = "AFTERTAX", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_AFTER_TAX_YIELD(1),
  /**
   * <code>YIELD_TYPE_ANNUAL_YIELD = 2 [(.fix.enum_value) = "ANNUAL", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_ANNUAL_YIELD(2),
  /**
   * <code>YIELD_TYPE_BOOK_YIELD = 3 [(.fix.enum_value) = "BOOK", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_BOOK_YIELD(3),
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD = 4 [(.fix.enum_value) = "CLOSE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_CLOSING_YIELD(4),
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_MONTH = 5 [(.fix.enum_value) = "LASTMONTH", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_MONTH(5),
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_QUARTER = 6 [(.fix.enum_value) = "LASTQUARTER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_QUARTER(6),
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_YEAR = 7 [(.fix.enum_value) = "LASTYEAR", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_YEAR(7),
  /**
   * <code>YIELD_TYPE_COMPOUND_YIELD = 8 [(.fix.enum_value) = "COMPOUND", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_COMPOUND_YIELD(8),
  /**
   * <code>YIELD_TYPE_CURRENT_YIELD = 9 [(.fix.enum_value) = "CURRENT", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_CURRENT_YIELD(9),
  /**
   * <code>YIELD_TYPE_GVNT_EQUIVALENT_YIELD = 10 [(.fix.enum_value) = "GOVTEQUIV", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_GVNT_EQUIVALENT_YIELD(10),
  /**
   * <code>YIELD_TYPE_INVERSE_FLOATER_BOND_YIELD = 11 [(.fix.enum_value) = "INVERSEFLOATER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_INVERSE_FLOATER_BOND_YIELD(11),
  /**
   * <code>YIELD_TYPE_MARK_TO_MARKET_YIELD = 12 [(.fix.enum_value) = "MARK", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_MARK_TO_MARKET_YIELD(12),
  /**
   * <code>YIELD_TYPE_MOST_RECENT_CLOSING_YIELD = 13 [(.fix.enum_value) = "LASTCLOSE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_MOST_RECENT_CLOSING_YIELD(13),
  /**
   * <code>YIELD_TYPE_OPEN_AVERAGE_YIELD = 14 [(.fix.enum_value) = "OPENAVG", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_OPEN_AVERAGE_YIELD(14),
  /**
   * <code>YIELD_TYPE_PREVIOUS_CLOSE_YIELD = 15 [(.fix.enum_value) = "PREVCLOSE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_PREVIOUS_CLOSE_YIELD(15),
  /**
   * <code>YIELD_TYPE_PROCEEDS_YIELD = 16 [(.fix.enum_value) = "PROCEEDS", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_PROCEEDS_YIELD(16),
  /**
   * <code>YIELD_TYPE_SEMI_ANNUAL_YIELD = 17 [(.fix.enum_value) = "SEMIANNUAL", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_SEMI_ANNUAL_YIELD(17),
  /**
   * <code>YIELD_TYPE_SIMPLE_YIELD = 18 [(.fix.enum_value) = "SIMPLE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_SIMPLE_YIELD(18),
  /**
   * <code>YIELD_TYPE_TAX_EQUIVALENT_YIELD = 19 [(.fix.enum_value) = "TAXEQUIV", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_TAX_EQUIVALENT_YIELD(19),
  /**
   * <code>YIELD_TYPE_TRUE_GROSS_YIELD = 20 [(.fix.enum_value) = "GROSS", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_TRUE_GROSS_YIELD(20),
  /**
   * <code>YIELD_TYPE_TRUE_YIELD = 21 [(.fix.enum_value) = "TRUE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_TRUE_YIELD(21),
  /**
   * <code>YIELD_TYPE_YIELD_AT_ISSUE = 22 [(.fix.enum_value) = "ATISSUE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_AT_ISSUE(22),
  /**
   * <code>YIELD_TYPE_YIELD_CHANGE_SINCE_CLOSE = 23 [(.fix.enum_value) = "CHANGE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_CHANGE_SINCE_CLOSE(23),
  /**
   * <code>YIELD_TYPE_YIELD_TO_AVERAGE_MATURITY = 24 [(.fix.enum_value) = "AVGMATURITY", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_AVERAGE_MATURITY(24),
  /**
   * <code>YIELD_TYPE_YIELD_TO_LONGEST_AVERAGE_LIFE = 25 [(.fix.enum_value) = "LONGAVGLIFE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_LONGEST_AVERAGE_LIFE(25),
  /**
   * <code>YIELD_TYPE_YIELD_TO_MATURITY = 26 [(.fix.enum_value) = "MATURITY", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_MATURITY(26),
  /**
   * <code>YIELD_TYPE_YIELD_TO_NEXT_CALL = 27 [(.fix.enum_value) = "CALL", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_NEXT_CALL(27),
  /**
   * <code>YIELD_TYPE_YIELD_TO_NEXT_PUT = 28 [(.fix.enum_value) = "PUT", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_NEXT_PUT(28),
  /**
   * <code>YIELD_TYPE_YIELD_TO_NEXT_REFUND = 29 [(.fix.enum_value) = "NEXTREFUND", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_NEXT_REFUND(29),
  /**
   * <code>YIELD_TYPE_YIELD_TO_SHORTEST_AVERAGE_LIFE = 30 [(.fix.enum_value) = "SHORTAVGLIFE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_SHORTEST_AVERAGE_LIFE(30),
  /**
   * <code>YIELD_TYPE_YIELD_TO_TENDER_DATE = 31 [(.fix.enum_value) = "TENDER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_TENDER_DATE(31),
  /**
   * <code>YIELD_TYPE_YIELD_TO_WORST = 32 [(.fix.enum_value) = "WORST", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_TO_WORST(32),
  /**
   * <code>YIELD_TYPE_YIELD_WITH_INFLATION_ASSUMPTION = 33 [(.fix.enum_value) = "INFLATION", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  YIELD_TYPE_YIELD_WITH_INFLATION_ASSUMPTION(33),
  /**
   * <code>YIELD_TYPE_YIELD_VALUE_OF32NDS = 34 [(.fix.enum_value) = "VALUE1_32", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  YIELD_TYPE_YIELD_VALUE_OF32NDS(34),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>YIELD_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int YIELD_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>YIELD_TYPE_AFTER_TAX_YIELD = 1 [(.fix.enum_value) = "AFTERTAX", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_AFTER_TAX_YIELD_VALUE = 1;
  /**
   * <code>YIELD_TYPE_ANNUAL_YIELD = 2 [(.fix.enum_value) = "ANNUAL", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_ANNUAL_YIELD_VALUE = 2;
  /**
   * <code>YIELD_TYPE_BOOK_YIELD = 3 [(.fix.enum_value) = "BOOK", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_BOOK_YIELD_VALUE = 3;
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD = 4 [(.fix.enum_value) = "CLOSE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_CLOSING_YIELD_VALUE = 4;
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_MONTH = 5 [(.fix.enum_value) = "LASTMONTH", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_MONTH_VALUE = 5;
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_QUARTER = 6 [(.fix.enum_value) = "LASTQUARTER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_QUARTER_VALUE = 6;
  /**
   * <code>YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_YEAR = 7 [(.fix.enum_value) = "LASTYEAR", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_YEAR_VALUE = 7;
  /**
   * <code>YIELD_TYPE_COMPOUND_YIELD = 8 [(.fix.enum_value) = "COMPOUND", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_COMPOUND_YIELD_VALUE = 8;
  /**
   * <code>YIELD_TYPE_CURRENT_YIELD = 9 [(.fix.enum_value) = "CURRENT", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_CURRENT_YIELD_VALUE = 9;
  /**
   * <code>YIELD_TYPE_GVNT_EQUIVALENT_YIELD = 10 [(.fix.enum_value) = "GOVTEQUIV", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_GVNT_EQUIVALENT_YIELD_VALUE = 10;
  /**
   * <code>YIELD_TYPE_INVERSE_FLOATER_BOND_YIELD = 11 [(.fix.enum_value) = "INVERSEFLOATER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_INVERSE_FLOATER_BOND_YIELD_VALUE = 11;
  /**
   * <code>YIELD_TYPE_MARK_TO_MARKET_YIELD = 12 [(.fix.enum_value) = "MARK", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_MARK_TO_MARKET_YIELD_VALUE = 12;
  /**
   * <code>YIELD_TYPE_MOST_RECENT_CLOSING_YIELD = 13 [(.fix.enum_value) = "LASTCLOSE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_MOST_RECENT_CLOSING_YIELD_VALUE = 13;
  /**
   * <code>YIELD_TYPE_OPEN_AVERAGE_YIELD = 14 [(.fix.enum_value) = "OPENAVG", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_OPEN_AVERAGE_YIELD_VALUE = 14;
  /**
   * <code>YIELD_TYPE_PREVIOUS_CLOSE_YIELD = 15 [(.fix.enum_value) = "PREVCLOSE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_PREVIOUS_CLOSE_YIELD_VALUE = 15;
  /**
   * <code>YIELD_TYPE_PROCEEDS_YIELD = 16 [(.fix.enum_value) = "PROCEEDS", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_PROCEEDS_YIELD_VALUE = 16;
  /**
   * <code>YIELD_TYPE_SEMI_ANNUAL_YIELD = 17 [(.fix.enum_value) = "SEMIANNUAL", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_SEMI_ANNUAL_YIELD_VALUE = 17;
  /**
   * <code>YIELD_TYPE_SIMPLE_YIELD = 18 [(.fix.enum_value) = "SIMPLE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_SIMPLE_YIELD_VALUE = 18;
  /**
   * <code>YIELD_TYPE_TAX_EQUIVALENT_YIELD = 19 [(.fix.enum_value) = "TAXEQUIV", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_TAX_EQUIVALENT_YIELD_VALUE = 19;
  /**
   * <code>YIELD_TYPE_TRUE_GROSS_YIELD = 20 [(.fix.enum_value) = "GROSS", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_TRUE_GROSS_YIELD_VALUE = 20;
  /**
   * <code>YIELD_TYPE_TRUE_YIELD = 21 [(.fix.enum_value) = "TRUE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_TRUE_YIELD_VALUE = 21;
  /**
   * <code>YIELD_TYPE_YIELD_AT_ISSUE = 22 [(.fix.enum_value) = "ATISSUE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_AT_ISSUE_VALUE = 22;
  /**
   * <code>YIELD_TYPE_YIELD_CHANGE_SINCE_CLOSE = 23 [(.fix.enum_value) = "CHANGE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_CHANGE_SINCE_CLOSE_VALUE = 23;
  /**
   * <code>YIELD_TYPE_YIELD_TO_AVERAGE_MATURITY = 24 [(.fix.enum_value) = "AVGMATURITY", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_AVERAGE_MATURITY_VALUE = 24;
  /**
   * <code>YIELD_TYPE_YIELD_TO_LONGEST_AVERAGE_LIFE = 25 [(.fix.enum_value) = "LONGAVGLIFE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_LONGEST_AVERAGE_LIFE_VALUE = 25;
  /**
   * <code>YIELD_TYPE_YIELD_TO_MATURITY = 26 [(.fix.enum_value) = "MATURITY", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_MATURITY_VALUE = 26;
  /**
   * <code>YIELD_TYPE_YIELD_TO_NEXT_CALL = 27 [(.fix.enum_value) = "CALL", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_NEXT_CALL_VALUE = 27;
  /**
   * <code>YIELD_TYPE_YIELD_TO_NEXT_PUT = 28 [(.fix.enum_value) = "PUT", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_NEXT_PUT_VALUE = 28;
  /**
   * <code>YIELD_TYPE_YIELD_TO_NEXT_REFUND = 29 [(.fix.enum_value) = "NEXTREFUND", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_NEXT_REFUND_VALUE = 29;
  /**
   * <code>YIELD_TYPE_YIELD_TO_SHORTEST_AVERAGE_LIFE = 30 [(.fix.enum_value) = "SHORTAVGLIFE", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_SHORTEST_AVERAGE_LIFE_VALUE = 30;
  /**
   * <code>YIELD_TYPE_YIELD_TO_TENDER_DATE = 31 [(.fix.enum_value) = "TENDER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_TENDER_DATE_VALUE = 31;
  /**
   * <code>YIELD_TYPE_YIELD_TO_WORST = 32 [(.fix.enum_value) = "WORST", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_TO_WORST_VALUE = 32;
  /**
   * <code>YIELD_TYPE_YIELD_WITH_INFLATION_ASSUMPTION = 33 [(.fix.enum_value) = "INFLATION", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int YIELD_TYPE_YIELD_WITH_INFLATION_ASSUMPTION_VALUE = 33;
  /**
   * <code>YIELD_TYPE_YIELD_VALUE_OF32NDS = 34 [(.fix.enum_value) = "VALUE1_32", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int YIELD_TYPE_YIELD_VALUE_OF32NDS_VALUE = 34;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static YieldTypeEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static YieldTypeEnum forNumber(int value) {
    switch (value) {
      case 0: return YIELD_TYPE_UNSPECIFIED;
      case 1: return YIELD_TYPE_AFTER_TAX_YIELD;
      case 2: return YIELD_TYPE_ANNUAL_YIELD;
      case 3: return YIELD_TYPE_BOOK_YIELD;
      case 4: return YIELD_TYPE_CLOSING_YIELD;
      case 5: return YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_MONTH;
      case 6: return YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_QUARTER;
      case 7: return YIELD_TYPE_CLOSING_YIELD_MOST_RECENT_YEAR;
      case 8: return YIELD_TYPE_COMPOUND_YIELD;
      case 9: return YIELD_TYPE_CURRENT_YIELD;
      case 10: return YIELD_TYPE_GVNT_EQUIVALENT_YIELD;
      case 11: return YIELD_TYPE_INVERSE_FLOATER_BOND_YIELD;
      case 12: return YIELD_TYPE_MARK_TO_MARKET_YIELD;
      case 13: return YIELD_TYPE_MOST_RECENT_CLOSING_YIELD;
      case 14: return YIELD_TYPE_OPEN_AVERAGE_YIELD;
      case 15: return YIELD_TYPE_PREVIOUS_CLOSE_YIELD;
      case 16: return YIELD_TYPE_PROCEEDS_YIELD;
      case 17: return YIELD_TYPE_SEMI_ANNUAL_YIELD;
      case 18: return YIELD_TYPE_SIMPLE_YIELD;
      case 19: return YIELD_TYPE_TAX_EQUIVALENT_YIELD;
      case 20: return YIELD_TYPE_TRUE_GROSS_YIELD;
      case 21: return YIELD_TYPE_TRUE_YIELD;
      case 22: return YIELD_TYPE_YIELD_AT_ISSUE;
      case 23: return YIELD_TYPE_YIELD_CHANGE_SINCE_CLOSE;
      case 24: return YIELD_TYPE_YIELD_TO_AVERAGE_MATURITY;
      case 25: return YIELD_TYPE_YIELD_TO_LONGEST_AVERAGE_LIFE;
      case 26: return YIELD_TYPE_YIELD_TO_MATURITY;
      case 27: return YIELD_TYPE_YIELD_TO_NEXT_CALL;
      case 28: return YIELD_TYPE_YIELD_TO_NEXT_PUT;
      case 29: return YIELD_TYPE_YIELD_TO_NEXT_REFUND;
      case 30: return YIELD_TYPE_YIELD_TO_SHORTEST_AVERAGE_LIFE;
      case 31: return YIELD_TYPE_YIELD_TO_TENDER_DATE;
      case 32: return YIELD_TYPE_YIELD_TO_WORST;
      case 33: return YIELD_TYPE_YIELD_WITH_INFLATION_ASSUMPTION;
      case 34: return YIELD_TYPE_YIELD_VALUE_OF32NDS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<YieldTypeEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      YieldTypeEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<YieldTypeEnum>() {
          public YieldTypeEnum findValueByNumber(int number) {
            return YieldTypeEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.fixprotocol.components.Common.getDescriptor().getEnumTypes().get(89);
  }

  private static final YieldTypeEnum[] VALUES = values();

  public static YieldTypeEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private YieldTypeEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Common.YieldTypeEnum)
}

