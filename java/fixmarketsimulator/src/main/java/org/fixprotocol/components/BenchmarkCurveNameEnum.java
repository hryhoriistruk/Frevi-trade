// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package org.fixprotocol.components;

/**
 * Protobuf enum {@code Common.BenchmarkCurveNameEnum}
 */
public enum BenchmarkCurveNameEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>BENCHMARK_CURVE_NAME_UNSPECIFIED = 0;</code>
   */
  BENCHMARK_CURVE_NAME_UNSPECIFIED(0),
  /**
   * <code>BENCHMARK_CURVE_NAME_EURIBOR = 1 [(.fix.enum_value) = "Euribor", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_EURIBOR(1),
  /**
   * <code>BENCHMARK_CURVE_NAME_FUTURE_SWAP = 2 [(.fix.enum_value) = "FutureSWAP", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_FUTURE_SWAP(2),
  /**
   * <code>BENCHMARK_CURVE_NAME_LIBID = 3 [(.fix.enum_value) = "LIBID", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_LIBID(3),
  /**
   * <code>BENCHMARK_CURVE_NAME_LIBOR = 4 [(.fix.enum_value) = "LIBOR", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_LIBOR(4),
  /**
   * <code>BENCHMARK_CURVE_NAME_MUNI_AAA = 5 [(.fix.enum_value) = "MuniAAA", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_MUNI_AAA(5),
  /**
   * <code>BENCHMARK_CURVE_NAME_OTHER = 6 [(.fix.enum_value) = "OTHER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_OTHER(6),
  /**
   * <code>BENCHMARK_CURVE_NAME_PFANDBRIEFE = 7 [(.fix.enum_value) = "Pfandbriefe", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_PFANDBRIEFE(7),
  /**
   * <code>BENCHMARK_CURVE_NAME_SWAP = 8 [(.fix.enum_value) = "SWAP", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_SWAP(8),
  /**
   * <code>BENCHMARK_CURVE_NAME_TREASURY = 9 [(.fix.enum_value) = "Treasury", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  BENCHMARK_CURVE_NAME_TREASURY(9),
  /**
   * <code>BENCHMARK_CURVE_NAME_EONIA = 10 [(.fix.enum_value) = "EONIA", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  BENCHMARK_CURVE_NAME_EONIA(10),
  /**
   * <code>BENCHMARK_CURVE_NAME_EUREPO = 11 [(.fix.enum_value) = "EUREPO", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  BENCHMARK_CURVE_NAME_EUREPO(11),
  /**
   * <code>BENCHMARK_CURVE_NAME_SONIA = 12 [(.fix.enum_value) = "SONIA", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  BENCHMARK_CURVE_NAME_SONIA(12),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>BENCHMARK_CURVE_NAME_UNSPECIFIED = 0;</code>
   */
  public static final int BENCHMARK_CURVE_NAME_UNSPECIFIED_VALUE = 0;
  /**
   * <code>BENCHMARK_CURVE_NAME_EURIBOR = 1 [(.fix.enum_value) = "Euribor", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_EURIBOR_VALUE = 1;
  /**
   * <code>BENCHMARK_CURVE_NAME_FUTURE_SWAP = 2 [(.fix.enum_value) = "FutureSWAP", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_FUTURE_SWAP_VALUE = 2;
  /**
   * <code>BENCHMARK_CURVE_NAME_LIBID = 3 [(.fix.enum_value) = "LIBID", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_LIBID_VALUE = 3;
  /**
   * <code>BENCHMARK_CURVE_NAME_LIBOR = 4 [(.fix.enum_value) = "LIBOR", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_LIBOR_VALUE = 4;
  /**
   * <code>BENCHMARK_CURVE_NAME_MUNI_AAA = 5 [(.fix.enum_value) = "MuniAAA", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_MUNI_AAA_VALUE = 5;
  /**
   * <code>BENCHMARK_CURVE_NAME_OTHER = 6 [(.fix.enum_value) = "OTHER", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_OTHER_VALUE = 6;
  /**
   * <code>BENCHMARK_CURVE_NAME_PFANDBRIEFE = 7 [(.fix.enum_value) = "Pfandbriefe", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_PFANDBRIEFE_VALUE = 7;
  /**
   * <code>BENCHMARK_CURVE_NAME_SWAP = 8 [(.fix.enum_value) = "SWAP", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_SWAP_VALUE = 8;
  /**
   * <code>BENCHMARK_CURVE_NAME_TREASURY = 9 [(.fix.enum_value) = "Treasury", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_TREASURY_VALUE = 9;
  /**
   * <code>BENCHMARK_CURVE_NAME_EONIA = 10 [(.fix.enum_value) = "EONIA", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_EONIA_VALUE = 10;
  /**
   * <code>BENCHMARK_CURVE_NAME_EUREPO = 11 [(.fix.enum_value) = "EUREPO", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_EUREPO_VALUE = 11;
  /**
   * <code>BENCHMARK_CURVE_NAME_SONIA = 12 [(.fix.enum_value) = "SONIA", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int BENCHMARK_CURVE_NAME_SONIA_VALUE = 12;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static BenchmarkCurveNameEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static BenchmarkCurveNameEnum forNumber(int value) {
    switch (value) {
      case 0: return BENCHMARK_CURVE_NAME_UNSPECIFIED;
      case 1: return BENCHMARK_CURVE_NAME_EURIBOR;
      case 2: return BENCHMARK_CURVE_NAME_FUTURE_SWAP;
      case 3: return BENCHMARK_CURVE_NAME_LIBID;
      case 4: return BENCHMARK_CURVE_NAME_LIBOR;
      case 5: return BENCHMARK_CURVE_NAME_MUNI_AAA;
      case 6: return BENCHMARK_CURVE_NAME_OTHER;
      case 7: return BENCHMARK_CURVE_NAME_PFANDBRIEFE;
      case 8: return BENCHMARK_CURVE_NAME_SWAP;
      case 9: return BENCHMARK_CURVE_NAME_TREASURY;
      case 10: return BENCHMARK_CURVE_NAME_EONIA;
      case 11: return BENCHMARK_CURVE_NAME_EUREPO;
      case 12: return BENCHMARK_CURVE_NAME_SONIA;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<BenchmarkCurveNameEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      BenchmarkCurveNameEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<BenchmarkCurveNameEnum>() {
          public BenchmarkCurveNameEnum findValueByNumber(int number) {
            return BenchmarkCurveNameEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.fixprotocol.components.Common.getDescriptor().getEnumTypes().get(66);
  }

  private static final BenchmarkCurveNameEnum[] VALUES = values();

  public static BenchmarkCurveNameEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private BenchmarkCurveNameEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Common.BenchmarkCurveNameEnum)
}

