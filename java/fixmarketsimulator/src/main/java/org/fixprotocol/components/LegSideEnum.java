// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package org.fixprotocol.components;

/**
 * Protobuf enum {@code Common.LegSideEnum}
 */
public enum LegSideEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>LEG_SIDE_UNSPECIFIED = 0;</code>
   */
  LEG_SIDE_UNSPECIFIED(0),
  /**
   * <code>LEG_SIDE_BUY = 1 [(.fix.enum_value) = "1", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  LEG_SIDE_BUY(1),
  /**
   * <code>LEG_SIDE_BUY_MINUS = 2 [(.fix.enum_value) = "3", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  LEG_SIDE_BUY_MINUS(2),
  /**
   * <code>LEG_SIDE_SELL = 3 [(.fix.enum_value) = "2", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  LEG_SIDE_SELL(3),
  /**
   * <code>LEG_SIDE_SELL_PLUS = 4 [(.fix.enum_value) = "4", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  LEG_SIDE_SELL_PLUS(4),
  /**
   * <code>LEG_SIDE_SELL_SHORT = 5 [(.fix.enum_value) = "5", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  LEG_SIDE_SELL_SHORT(5),
  /**
   * <code>LEG_SIDE_SELL_SHORT_EXEMPT = 6 [(.fix.enum_value) = "6", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  LEG_SIDE_SELL_SHORT_EXEMPT(6),
  /**
   * <code>LEG_SIDE_CROSS = 7 [(.fix.enum_value) = "8", (.fix.enum_added) = VERSION_FIX_4_1];</code>
   */
  LEG_SIDE_CROSS(7),
  /**
   * <code>LEG_SIDE_UNDISCLOSED = 8 [(.fix.enum_value) = "7", (.fix.enum_added) = VERSION_FIX_4_1];</code>
   */
  LEG_SIDE_UNDISCLOSED(8),
  /**
   * <code>LEG_SIDE_CROSS_SHORT = 9 [(.fix.enum_value) = "9", (.fix.enum_added) = VERSION_FIX_4_2];</code>
   */
  LEG_SIDE_CROSS_SHORT(9),
  /**
   * <code>LEG_SIDE_AS_DEFINED = 10 [(.fix.enum_value) = "B", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  LEG_SIDE_AS_DEFINED(10),
  /**
   * <code>LEG_SIDE_CROSS_SHORT_EXEMPT = 11 [(.fix.enum_value) = "A", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  LEG_SIDE_CROSS_SHORT_EXEMPT(11),
  /**
   * <code>LEG_SIDE_OPPOSITE = 12 [(.fix.enum_value) = "C", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  LEG_SIDE_OPPOSITE(12),
  /**
   * <code>LEG_SIDE_BORROW = 13 [(.fix.enum_value) = "G", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  LEG_SIDE_BORROW(13),
  /**
   * <code>LEG_SIDE_LEND = 14 [(.fix.enum_value) = "F", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  LEG_SIDE_LEND(14),
  /**
   * <code>LEG_SIDE_REDEEM = 15 [(.fix.enum_value) = "E", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  LEG_SIDE_REDEEM(15),
  /**
   * <code>LEG_SIDE_SUBSCRIBE = 16 [(.fix.enum_value) = "D", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  LEG_SIDE_SUBSCRIBE(16),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>LEG_SIDE_UNSPECIFIED = 0;</code>
   */
  public static final int LEG_SIDE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>LEG_SIDE_BUY = 1 [(.fix.enum_value) = "1", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  public static final int LEG_SIDE_BUY_VALUE = 1;
  /**
   * <code>LEG_SIDE_BUY_MINUS = 2 [(.fix.enum_value) = "3", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  public static final int LEG_SIDE_BUY_MINUS_VALUE = 2;
  /**
   * <code>LEG_SIDE_SELL = 3 [(.fix.enum_value) = "2", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  public static final int LEG_SIDE_SELL_VALUE = 3;
  /**
   * <code>LEG_SIDE_SELL_PLUS = 4 [(.fix.enum_value) = "4", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  public static final int LEG_SIDE_SELL_PLUS_VALUE = 4;
  /**
   * <code>LEG_SIDE_SELL_SHORT = 5 [(.fix.enum_value) = "5", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  public static final int LEG_SIDE_SELL_SHORT_VALUE = 5;
  /**
   * <code>LEG_SIDE_SELL_SHORT_EXEMPT = 6 [(.fix.enum_value) = "6", (.fix.enum_added) = VERSION_FIX_2_7];</code>
   */
  public static final int LEG_SIDE_SELL_SHORT_EXEMPT_VALUE = 6;
  /**
   * <code>LEG_SIDE_CROSS = 7 [(.fix.enum_value) = "8", (.fix.enum_added) = VERSION_FIX_4_1];</code>
   */
  public static final int LEG_SIDE_CROSS_VALUE = 7;
  /**
   * <code>LEG_SIDE_UNDISCLOSED = 8 [(.fix.enum_value) = "7", (.fix.enum_added) = VERSION_FIX_4_1];</code>
   */
  public static final int LEG_SIDE_UNDISCLOSED_VALUE = 8;
  /**
   * <code>LEG_SIDE_CROSS_SHORT = 9 [(.fix.enum_value) = "9", (.fix.enum_added) = VERSION_FIX_4_2];</code>
   */
  public static final int LEG_SIDE_CROSS_SHORT_VALUE = 9;
  /**
   * <code>LEG_SIDE_AS_DEFINED = 10 [(.fix.enum_value) = "B", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int LEG_SIDE_AS_DEFINED_VALUE = 10;
  /**
   * <code>LEG_SIDE_CROSS_SHORT_EXEMPT = 11 [(.fix.enum_value) = "A", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int LEG_SIDE_CROSS_SHORT_EXEMPT_VALUE = 11;
  /**
   * <code>LEG_SIDE_OPPOSITE = 12 [(.fix.enum_value) = "C", (.fix.enum_added) = VERSION_FIX_4_3];</code>
   */
  public static final int LEG_SIDE_OPPOSITE_VALUE = 12;
  /**
   * <code>LEG_SIDE_BORROW = 13 [(.fix.enum_value) = "G", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int LEG_SIDE_BORROW_VALUE = 13;
  /**
   * <code>LEG_SIDE_LEND = 14 [(.fix.enum_value) = "F", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int LEG_SIDE_LEND_VALUE = 14;
  /**
   * <code>LEG_SIDE_REDEEM = 15 [(.fix.enum_value) = "E", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int LEG_SIDE_REDEEM_VALUE = 15;
  /**
   * <code>LEG_SIDE_SUBSCRIBE = 16 [(.fix.enum_value) = "D", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int LEG_SIDE_SUBSCRIBE_VALUE = 16;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static LegSideEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static LegSideEnum forNumber(int value) {
    switch (value) {
      case 0: return LEG_SIDE_UNSPECIFIED;
      case 1: return LEG_SIDE_BUY;
      case 2: return LEG_SIDE_BUY_MINUS;
      case 3: return LEG_SIDE_SELL;
      case 4: return LEG_SIDE_SELL_PLUS;
      case 5: return LEG_SIDE_SELL_SHORT;
      case 6: return LEG_SIDE_SELL_SHORT_EXEMPT;
      case 7: return LEG_SIDE_CROSS;
      case 8: return LEG_SIDE_UNDISCLOSED;
      case 9: return LEG_SIDE_CROSS_SHORT;
      case 10: return LEG_SIDE_AS_DEFINED;
      case 11: return LEG_SIDE_CROSS_SHORT_EXEMPT;
      case 12: return LEG_SIDE_OPPOSITE;
      case 13: return LEG_SIDE_BORROW;
      case 14: return LEG_SIDE_LEND;
      case 15: return LEG_SIDE_REDEEM;
      case 16: return LEG_SIDE_SUBSCRIBE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<LegSideEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      LegSideEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LegSideEnum>() {
          public LegSideEnum findValueByNumber(int number) {
            return LegSideEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.fixprotocol.components.Common.getDescriptor().getEnumTypes().get(44);
  }

  private static final LegSideEnum[] VALUES = values();

  public static LegSideEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private LegSideEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Common.LegSideEnum)
}

