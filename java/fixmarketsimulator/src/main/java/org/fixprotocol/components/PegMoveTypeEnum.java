// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package org.fixprotocol.components;

/**
 * Protobuf enum {@code Common.PegMoveTypeEnum}
 */
public enum PegMoveTypeEnum
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>PEG_MOVE_TYPE_UNSPECIFIED = 0;</code>
   */
  PEG_MOVE_TYPE_UNSPECIFIED(0),
  /**
   * <code>PEG_MOVE_TYPE_FIXED = 1 [(.fix.enum_value) = "1", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  PEG_MOVE_TYPE_FIXED(1),
  /**
   * <code>PEG_MOVE_TYPE_FLOATING = 2 [(.fix.enum_value) = "0", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  PEG_MOVE_TYPE_FLOATING(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>PEG_MOVE_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int PEG_MOVE_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <code>PEG_MOVE_TYPE_FIXED = 1 [(.fix.enum_value) = "1", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int PEG_MOVE_TYPE_FIXED_VALUE = 1;
  /**
   * <code>PEG_MOVE_TYPE_FLOATING = 2 [(.fix.enum_value) = "0", (.fix.enum_added) = VERSION_FIX_4_4];</code>
   */
  public static final int PEG_MOVE_TYPE_FLOATING_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PegMoveTypeEnum valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PegMoveTypeEnum forNumber(int value) {
    switch (value) {
      case 0: return PEG_MOVE_TYPE_UNSPECIFIED;
      case 1: return PEG_MOVE_TYPE_FIXED;
      case 2: return PEG_MOVE_TYPE_FLOATING;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PegMoveTypeEnum>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PegMoveTypeEnum> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PegMoveTypeEnum>() {
          public PegMoveTypeEnum findValueByNumber(int number) {
            return PegMoveTypeEnum.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.fixprotocol.components.Common.getDescriptor().getEnumTypes().get(53);
  }

  private static final PegMoveTypeEnum[] VALUES = values();

  public static PegMoveTypeEnum valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PegMoveTypeEnum(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Common.PegMoveTypeEnum)
}

